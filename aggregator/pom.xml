<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>it.jasonravagli.gym</groupId>
	<artifactId>aggregator</artifactId>
	<version>1.0</version>
	<packaging>pom</packaging>

	<name>gym-manager</name>

	<modules>
		<module>../parent</module>
		<module>../domain-model</module>
		<module>../logic</module>
		<module>../mongodb</module>
		<module>../gui</module>
		<module>../app-mongo</module>
		<module>../mysql</module>
		<module>../app-mysql</module>
	</modules>

	<properties>
		<!-- SONARQUBE CONFIGURATION -->
		<!-- Exclude the domain model and the other classes without logic from 
			code coverage -->
		<sonar.coverage.exclusions>
			**/domain-model/**,
			**/mongodb/**/MongoRepositoryProvider.java,
			**/logic/**/TransactionException.java,
			**/gui/**/SimpleDocumentListener.java,
			**/app-mongo/**/MongoGymApp.java,
			**/mysql/**/MySqlRepositoryProvider.java,
			**/app-mysql/**/MySqlGymApp.java
		</sonar.coverage.exclusions>
		<sonar.issue.ignore.multicriteria>e11,e12,e13,e14,e15,e16</sonar.issue.ignore.multicriteria>

		<!-- Disable rule "Tests should include assertions" for GUI Tests (AssertJ 
			Swing tests does not necessarily perform explicit assertions) -->
		<sonar.issue.ignore.multicriteria.e11.ruleKey>
			java:S2699
		</sonar.issue.ignore.multicriteria.e11.ruleKey>
		<sonar.issue.ignore.multicriteria.e11.resourceKey>
			**/gui/**/*.java
		</sonar.issue.ignore.multicriteria.e11.resourceKey>

		<!-- Disable rule "Local variable and method parameter names should comply 
			with a naming convention" for GUI code since WindowBuilder automatically 
			assign names to variables -->
		<sonar.issue.ignore.multicriteria.e12.ruleKey>
			java:S117
		</sonar.issue.ignore.multicriteria.e12.ruleKey>
		<sonar.issue.ignore.multicriteria.e12.resourceKey>
			**/gui/**/Swing*.java
		</sonar.issue.ignore.multicriteria.e12.resourceKey>

		<!-- Disable rule "Test classes should comply with a naming convention" 
			for end to end tests classes (The suffix E2E does not comply the Java convention) -->
		<sonar.issue.ignore.multicriteria.e13.ruleKey>
			java:S3577
		</sonar.issue.ignore.multicriteria.e13.ruleKey>
		<sonar.issue.ignore.multicriteria.e13.resourceKey>
			**/*E2E.java
		</sonar.issue.ignore.multicriteria.e13.resourceKey>

		<!-- Disable rule "Generic exceptions should never be thrown" for Repository 
			and TransactioCode interfaces. The implementations of this interfaces should 
			not take care of catching and handling exception. This is responsibility 
			of the TransactionManager that uses this components: it catches generic exceptions, 
			handles them and throws custom exceptions -->
		<sonar.issue.ignore.multicriteria.e14.ruleKey>
			java:S112
		</sonar.issue.ignore.multicriteria.e14.ruleKey>
		<sonar.issue.ignore.multicriteria.e14.resourceKey>
			**/logic/**/*Repository.java
		</sonar.issue.ignore.multicriteria.e14.resourceKey>
		<sonar.issue.ignore.multicriteria.e15.ruleKey>
			java:S112
		</sonar.issue.ignore.multicriteria.e15.ruleKey>
		<sonar.issue.ignore.multicriteria.e15.resourceKey>
			**/logic/**/TransactionCode.java
		</sonar.issue.ignore.multicriteria.e15.resourceKey>

		<!-- Disable rule "Hard-coded credentials are security-sensitive" for the 
			Main class of the MySQL application. The hard-coded password is intended 
			for testing and demo purposes. In a production environment the MySQL database 
			should be secured with a strong password passed to the application through 
			the command line -->
		<sonar.issue.ignore.multicriteria.e16.ruleKey>
			java:S2068
		</sonar.issue.ignore.multicriteria.e16.ruleKey>
		<sonar.issue.ignore.multicriteria.e16.resourceKey>
			**/app-mysql/**/MySqlGymApp.java
		</sonar.issue.ignore.multicriteria.e16.resourceKey>
	</properties>

	<build>
		<pluginManagement>
			<plugins>
				<!-- SONARQUBE PLUGIN -->
				<!-- SonarQube is meant to be used from the root context of the build, 
					hence must be configured in the aggregator project -->
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.9.0.2155</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>jacoco</id>
			<modules>
				<module>../report</module>
			</modules>
		</profile>
		<profile>
			<id>coveralls</id>
			<modules>
				<module>../report</module>
			</modules>
		</profile>
		<profile>
			<id>sonar</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.sonarsource.scanner.maven</groupId>
						<artifactId>sonar-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>sonar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>